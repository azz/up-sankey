/* tslint:disable */
/* eslint-disable */
/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CategoryResourceRelationshipsParent } from './CategoryResourceRelationshipsParent';
import {
    CategoryResourceRelationshipsParentFromJSON,
    CategoryResourceRelationshipsParentFromJSONTyped,
    CategoryResourceRelationshipsParentToJSON,
} from './CategoryResourceRelationshipsParent';
import type { TransactionResourceRelationshipsAccount } from './TransactionResourceRelationshipsAccount';
import {
    TransactionResourceRelationshipsAccountFromJSON,
    TransactionResourceRelationshipsAccountFromJSONTyped,
    TransactionResourceRelationshipsAccountToJSON,
} from './TransactionResourceRelationshipsAccount';
import type { TransactionResourceRelationshipsCategory } from './TransactionResourceRelationshipsCategory';
import {
    TransactionResourceRelationshipsCategoryFromJSON,
    TransactionResourceRelationshipsCategoryFromJSONTyped,
    TransactionResourceRelationshipsCategoryToJSON,
} from './TransactionResourceRelationshipsCategory';
import type { TransactionResourceRelationshipsTags } from './TransactionResourceRelationshipsTags';
import {
    TransactionResourceRelationshipsTagsFromJSON,
    TransactionResourceRelationshipsTagsFromJSONTyped,
    TransactionResourceRelationshipsTagsToJSON,
} from './TransactionResourceRelationshipsTags';
import type { TransactionResourceRelationshipsTransferAccount } from './TransactionResourceRelationshipsTransferAccount';
import {
    TransactionResourceRelationshipsTransferAccountFromJSON,
    TransactionResourceRelationshipsTransferAccountFromJSONTyped,
    TransactionResourceRelationshipsTransferAccountToJSON,
} from './TransactionResourceRelationshipsTransferAccount';

/**
 * 
 * @export
 * @interface TransactionResourceRelationships
 */
export interface TransactionResourceRelationships {
    /**
     * 
     * @type {TransactionResourceRelationshipsAccount}
     * @memberof TransactionResourceRelationships
     */
    account: TransactionResourceRelationshipsAccount;
    /**
     * 
     * @type {TransactionResourceRelationshipsTransferAccount}
     * @memberof TransactionResourceRelationships
     */
    transferAccount: TransactionResourceRelationshipsTransferAccount;
    /**
     * 
     * @type {TransactionResourceRelationshipsCategory}
     * @memberof TransactionResourceRelationships
     */
    category: TransactionResourceRelationshipsCategory;
    /**
     * 
     * @type {CategoryResourceRelationshipsParent}
     * @memberof TransactionResourceRelationships
     */
    parentCategory: CategoryResourceRelationshipsParent;
    /**
     * 
     * @type {TransactionResourceRelationshipsTags}
     * @memberof TransactionResourceRelationships
     */
    tags: TransactionResourceRelationshipsTags;
}

/**
 * Check if a given object implements the TransactionResourceRelationships interface.
 */
export function instanceOfTransactionResourceRelationships(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "account" in value;
    isInstance = isInstance && "transferAccount" in value;
    isInstance = isInstance && "category" in value;
    isInstance = isInstance && "parentCategory" in value;
    isInstance = isInstance && "tags" in value;

    return isInstance;
}

export function TransactionResourceRelationshipsFromJSON(json: any): TransactionResourceRelationships {
    return TransactionResourceRelationshipsFromJSONTyped(json, false);
}

export function TransactionResourceRelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionResourceRelationships {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'account': TransactionResourceRelationshipsAccountFromJSON(json['account']),
        'transferAccount': TransactionResourceRelationshipsTransferAccountFromJSON(json['transferAccount']),
        'category': TransactionResourceRelationshipsCategoryFromJSON(json['category']),
        'parentCategory': CategoryResourceRelationshipsParentFromJSON(json['parentCategory']),
        'tags': TransactionResourceRelationshipsTagsFromJSON(json['tags']),
    };
}

export function TransactionResourceRelationshipsToJSON(value?: TransactionResourceRelationships | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'account': TransactionResourceRelationshipsAccountToJSON(value.account),
        'transferAccount': TransactionResourceRelationshipsTransferAccountToJSON(value.transferAccount),
        'category': TransactionResourceRelationshipsCategoryToJSON(value.category),
        'parentCategory': CategoryResourceRelationshipsParentToJSON(value.parentCategory),
        'tags': TransactionResourceRelationshipsTagsToJSON(value.tags),
    };
}

