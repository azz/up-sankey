/* tslint:disable */
/* eslint-disable */
/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CategoryResourceRelationshipsChildren } from './CategoryResourceRelationshipsChildren';
import {
    CategoryResourceRelationshipsChildrenFromJSON,
    CategoryResourceRelationshipsChildrenFromJSONTyped,
    CategoryResourceRelationshipsChildrenToJSON,
} from './CategoryResourceRelationshipsChildren';
import type { CategoryResourceRelationshipsParent } from './CategoryResourceRelationshipsParent';
import {
    CategoryResourceRelationshipsParentFromJSON,
    CategoryResourceRelationshipsParentFromJSONTyped,
    CategoryResourceRelationshipsParentToJSON,
} from './CategoryResourceRelationshipsParent';

/**
 * 
 * @export
 * @interface CategoryResourceRelationships
 */
export interface CategoryResourceRelationships {
    /**
     * 
     * @type {CategoryResourceRelationshipsParent}
     * @memberof CategoryResourceRelationships
     */
    parent: CategoryResourceRelationshipsParent;
    /**
     * 
     * @type {CategoryResourceRelationshipsChildren}
     * @memberof CategoryResourceRelationships
     */
    children: CategoryResourceRelationshipsChildren;
}

/**
 * Check if a given object implements the CategoryResourceRelationships interface.
 */
export function instanceOfCategoryResourceRelationships(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "parent" in value;
    isInstance = isInstance && "children" in value;

    return isInstance;
}

export function CategoryResourceRelationshipsFromJSON(json: any): CategoryResourceRelationships {
    return CategoryResourceRelationshipsFromJSONTyped(json, false);
}

export function CategoryResourceRelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryResourceRelationships {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'parent': CategoryResourceRelationshipsParentFromJSON(json['parent']),
        'children': CategoryResourceRelationshipsChildrenFromJSON(json['children']),
    };
}

export function CategoryResourceRelationshipsToJSON(value?: CategoryResourceRelationships | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'parent': CategoryResourceRelationshipsParentToJSON(value.parent),
        'children': CategoryResourceRelationshipsChildrenToJSON(value.children),
    };
}

