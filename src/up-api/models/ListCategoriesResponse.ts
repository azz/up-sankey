/* tslint:disable */
/* eslint-disable */
/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CategoryResource } from './CategoryResource';
import {
    CategoryResourceFromJSON,
    CategoryResourceFromJSONTyped,
    CategoryResourceToJSON,
} from './CategoryResource';

/**
 * Successful response to get all categories and their ancestry. The
 * returned list is not paginated.
 * @export
 * @interface ListCategoriesResponse
 */
export interface ListCategoriesResponse {
    /**
     * The list of categories returned in this response.
     * @type {Array<CategoryResource>}
     * @memberof ListCategoriesResponse
     */
    data: Array<CategoryResource>;
}

/**
 * Check if a given object implements the ListCategoriesResponse interface.
 */
export function instanceOfListCategoriesResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function ListCategoriesResponseFromJSON(json: any): ListCategoriesResponse {
    return ListCategoriesResponseFromJSONTyped(json, false);
}

export function ListCategoriesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListCategoriesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(CategoryResourceFromJSON)),
    };
}

export function ListCategoriesResponseToJSON(value?: ListCategoriesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(CategoryResourceToJSON)),
    };
}

