/* tslint:disable */
/* eslint-disable */
/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HoldInfoObjectAmount } from './HoldInfoObjectAmount';
import {
    HoldInfoObjectAmountFromJSON,
    HoldInfoObjectAmountFromJSONTyped,
    HoldInfoObjectAmountToJSON,
} from './HoldInfoObjectAmount';
import type { HoldInfoObjectForeignAmount } from './HoldInfoObjectForeignAmount';
import {
    HoldInfoObjectForeignAmountFromJSON,
    HoldInfoObjectForeignAmountFromJSONTyped,
    HoldInfoObjectForeignAmountToJSON,
} from './HoldInfoObjectForeignAmount';

/**
 * Provides information about the amount at which a transaction was in the
 * `HELD` status.
 * @export
 * @interface HoldInfoObject
 */
export interface HoldInfoObject {
    /**
     * 
     * @type {HoldInfoObjectAmount}
     * @memberof HoldInfoObject
     */
    amount: HoldInfoObjectAmount;
    /**
     * 
     * @type {HoldInfoObjectForeignAmount}
     * @memberof HoldInfoObject
     */
    foreignAmount: HoldInfoObjectForeignAmount | null;
}

/**
 * Check if a given object implements the HoldInfoObject interface.
 */
export function instanceOfHoldInfoObject(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "foreignAmount" in value;

    return isInstance;
}

export function HoldInfoObjectFromJSON(json: any): HoldInfoObject {
    return HoldInfoObjectFromJSONTyped(json, false);
}

export function HoldInfoObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): HoldInfoObject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': HoldInfoObjectAmountFromJSON(json['amount']),
        'foreignAmount': HoldInfoObjectForeignAmountFromJSON(json['foreignAmount']),
    };
}

export function HoldInfoObjectToJSON(value?: HoldInfoObject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': HoldInfoObjectAmountToJSON(value.amount),
        'foreignAmount': HoldInfoObjectForeignAmountToJSON(value.foreignAmount),
    };
}

