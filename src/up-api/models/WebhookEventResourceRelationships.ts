/* tslint:disable */
/* eslint-disable */
/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WebhookEventResourceRelationshipsTransaction } from './WebhookEventResourceRelationshipsTransaction';
import {
    WebhookEventResourceRelationshipsTransactionFromJSON,
    WebhookEventResourceRelationshipsTransactionFromJSONTyped,
    WebhookEventResourceRelationshipsTransactionToJSON,
} from './WebhookEventResourceRelationshipsTransaction';
import type { WebhookEventResourceRelationshipsWebhook } from './WebhookEventResourceRelationshipsWebhook';
import {
    WebhookEventResourceRelationshipsWebhookFromJSON,
    WebhookEventResourceRelationshipsWebhookFromJSONTyped,
    WebhookEventResourceRelationshipsWebhookToJSON,
} from './WebhookEventResourceRelationshipsWebhook';

/**
 * 
 * @export
 * @interface WebhookEventResourceRelationships
 */
export interface WebhookEventResourceRelationships {
    /**
     * 
     * @type {WebhookEventResourceRelationshipsWebhook}
     * @memberof WebhookEventResourceRelationships
     */
    webhook: WebhookEventResourceRelationshipsWebhook;
    /**
     * 
     * @type {WebhookEventResourceRelationshipsTransaction}
     * @memberof WebhookEventResourceRelationships
     */
    transaction?: WebhookEventResourceRelationshipsTransaction;
}

/**
 * Check if a given object implements the WebhookEventResourceRelationships interface.
 */
export function instanceOfWebhookEventResourceRelationships(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "webhook" in value;

    return isInstance;
}

export function WebhookEventResourceRelationshipsFromJSON(json: any): WebhookEventResourceRelationships {
    return WebhookEventResourceRelationshipsFromJSONTyped(json, false);
}

export function WebhookEventResourceRelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookEventResourceRelationships {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'webhook': WebhookEventResourceRelationshipsWebhookFromJSON(json['webhook']),
        'transaction': !exists(json, 'transaction') ? undefined : WebhookEventResourceRelationshipsTransactionFromJSON(json['transaction']),
    };
}

export function WebhookEventResourceRelationshipsToJSON(value?: WebhookEventResourceRelationships | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'webhook': WebhookEventResourceRelationshipsWebhookToJSON(value.webhook),
        'transaction': WebhookEventResourceRelationshipsTransactionToJSON(value.transaction),
    };
}

