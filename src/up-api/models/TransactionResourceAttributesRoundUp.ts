/* tslint:disable */
/* eslint-disable */
/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoundUpObject } from './RoundUpObject';
import {
    RoundUpObjectFromJSON,
    RoundUpObjectFromJSONTyped,
    RoundUpObjectToJSON,
} from './RoundUpObject';
import type { RoundUpObjectAmount } from './RoundUpObjectAmount';
import {
    RoundUpObjectAmountFromJSON,
    RoundUpObjectAmountFromJSONTyped,
    RoundUpObjectAmountToJSON,
} from './RoundUpObjectAmount';
import type { RoundUpObjectBoostPortion } from './RoundUpObjectBoostPortion';
import {
    RoundUpObjectBoostPortionFromJSON,
    RoundUpObjectBoostPortionFromJSONTyped,
    RoundUpObjectBoostPortionToJSON,
} from './RoundUpObjectBoostPortion';

/**
 * Details of how this transaction was rounded-up. If no Round Up was
 * applied this field will be `null`.
 * @export
 * @interface TransactionResourceAttributesRoundUp
 */
export interface TransactionResourceAttributesRoundUp {
    /**
     * 
     * @type {RoundUpObjectAmount}
     * @memberof TransactionResourceAttributesRoundUp
     */
    amount: RoundUpObjectAmount;
    /**
     * 
     * @type {RoundUpObjectBoostPortion}
     * @memberof TransactionResourceAttributesRoundUp
     */
    boostPortion: RoundUpObjectBoostPortion | null;
}

/**
 * Check if a given object implements the TransactionResourceAttributesRoundUp interface.
 */
export function instanceOfTransactionResourceAttributesRoundUp(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "boostPortion" in value;

    return isInstance;
}

export function TransactionResourceAttributesRoundUpFromJSON(json: any): TransactionResourceAttributesRoundUp {
    return TransactionResourceAttributesRoundUpFromJSONTyped(json, false);
}

export function TransactionResourceAttributesRoundUpFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionResourceAttributesRoundUp {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': RoundUpObjectAmountFromJSON(json['amount']),
        'boostPortion': RoundUpObjectBoostPortionFromJSON(json['boostPortion']),
    };
}

export function TransactionResourceAttributesRoundUpToJSON(value?: TransactionResourceAttributesRoundUp | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': RoundUpObjectAmountToJSON(value.amount),
        'boostPortion': RoundUpObjectBoostPortionToJSON(value.boostPortion),
    };
}

